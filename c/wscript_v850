#
# v850
#

def v850_shared(ctx):
	ctx.bsp.start(["src/lib/libbsp/v850/gdbv850sim/start/start.S"])

	source = [
		"src/lib/libbsp/v850/gdbv850sim/console/console-io.c",
		"src/lib/libbsp/v850/gdbv850sim/startup/bspreset.c",
		"src/lib/libbsp/v850/gdbv850sim/startup/trap.S",
		"src/lib/libbsp/v850/shared/crt1.c",
	]

	ctx.bsp.source(
		source,
		features="src_include"
	)


def build(ctx):
	source = []

	source += [
		"src/lib/libbsp/shared/bootcard.c",
		"src/lib/libbsp/shared/bspclean.c",
		"src/lib/libbsp/shared/bspgetworkarea.c",
		"src/lib/libbsp/shared/bsplibc.c",
		"src/lib/libbsp/shared/bsppost.c",
		"src/lib/libbsp/shared/bsppredriverhook.c",
		"src/lib/libbsp/shared/bsppretaskinghook.c",
		"src/lib/libbsp/shared/bspstart.c",
		"src/lib/libbsp/shared/clock_driver_simidle.c",
		"src/lib/libbsp/shared/console-polled.c",
		"src/lib/libbsp/shared/gnatinstallhandler.c",
		"src/lib/libbsp/shared/sbrk.c",
		"src/lib/libbsp/shared/timerstub.c",
	]

	ctx.bsp.source(
		source,
		features="src_include"
	)

	map = {
		"v850e1sim":	v850_shared,
		"v850e2sim":	v850_shared,
		"v850e2v3sim":	v850_shared,
		"v850esim":		v850_shared,
		"v850essim":	v850_shared,
		"v850sim":		v850_shared,
	}

	if not ctx.env.RTEMS_BSP in map:
		ctx.fatal("wscript_v850(): Internal Error: Unknown BSP: %s" % ctx.env.RTEMS_BSP)

	map[ctx.env.RTEMS_BSP](ctx)
