def build(ctx):
	source = []

#	source_sockets = [
#		"src/libio_sockets.c"
#	]
#	ctx.cpu.networking(source_sockets,
#			   features="src_include src_include_rtems")


	source_newlib= [
		"src/readv.c",
		"src/writev.c"
	]
	ctx.cpu.newlib(
		source_newlib,
		features="src_include"
	)

	# ERROR_C_FILES
	source += [
		"src/error.c",
		"src/__assert.c"
	]

	# ASSOCIATION_C_FILES
	source += [
		"src/assoclocalbyname.c",
		"src/assoclocalbyremotebitfield.c",
		"src/assoclocalbyremote.c",
		"src/assocnamebad.c",
		"src/assocnamebylocalbitfield.c",
		"src/assocnamebylocal.c",
		"src/assocnamebyremotebitfield.c",
		"src/assocnamebyremote.c",
		"src/assocptrbylocal.c",
		"src/assocptrbyname.c",
		"src/assocptrbyremote.c",
		"src/assocremotebylocalbitfield.c",
		"src/assocremotebylocal.c",
		"src/assocremotebyname.c"
	]

	# BASE_FS_C_FILES
	source += [
		"src/base_fs.c",
		"src/mount.c",
		"src/unmount.c",
		"src/libio.c",
		"src/mount-mgr.c",
		"src/mount-mktgt.c",
		"src/libio_init.c",
		"src/privateenv.c",
		"src/open_dev_console.c",
		"src/__usrenv.c",
		"src/rtems_mkdir.c"
	]


	# TERMIOS_C_FILES
	source += [
		"src/cfgetispeed.c",
		"src/cfgetospeed.c",
		"src/cfsetispeed.c",
		"src/cfsetospeed.c",
		"src/tcgetattr.c",
		"src/tcsetattr.c",
		"src/tcdrain.c",
		"src/tcflow.c",
		"src/tcflush.c",
		"src/tcgetpgrp.c",
		"src/tcsendbreak.c",
		"src/tcsetpgrp.c",
		"src/termios.c",
		"src/termiosinitialize.c",
		"src/termios_baud2index.c",
		"src/termios_baud2num.c",
		"src/termios_num2baud.c",
		"src/termios_setinitialbaud.c",
		"src/termios_baudtable.c",
		"src/termios_setbestbaud.c"
	]

	# SYSTEM_CALL_C_FILES
	source += [
		"src/open.c",
		"src/close.c",
		"src/read.c",
		"src/write.c",
		"src/write_r.c",
		"src/lseek.c",
		"src/ioctl.c",
		"src/mkdir.c",
		"src/mknod.c",
		"src/mkfifo.c",
		"src/rmdir.c",
		"src/chdir.c",
		"src/chmod.c",
		"src/fchdir.c",
		"src/fchmod.c",
		"src/fchown.c",
		"src/chown.c",
		"src/link.c",
		"src/unlink.c",
		"src/umask.c",
		"src/ftruncate.c",
		"src/utime.c",
		"src/fstat.c",
		"src/fcntl.c",
		"src/fpathconf.c",
		"src/getdents.c",
		"src/fsync.c",
		"src/fdatasync.c",
		"src/pipe.c",
		"src/dup.c",
		"src/dup2.c",
		"src/symlink.c",
		"src/readlink.c",
		"src/chroot.c",
		"src/sync.c",
		"src/_rename_r.c",
		"src/statvfs.c",
		"src/utimes.c",
		"src/lchown.c"
	]

	# ID_C_FILES
	source += [
		"src/getegid.c",
		"src/geteuid.c",
		"src/getgid.c",
		"src/getgroups.c",
		"src/getlogin.c",
		"src/getpgrp.c",
		"src/getpid.c",
		"src/getppid.c",
		"src/getuid.c",
		"src/setgid.c",
		"src/setuid.c",
		"src/seteuid.c",
		"src/setpgid.c",
		"src/setsid.c",
		"src/setegid.c"
	]

	# MALLOC_C_FILES
	source += [
		"src/_calloc_r.c",
		"src/_free_r.c",
		"src/_malloc_r.c",
		"src/_realloc_r.c",
		"src/calloc.c",
		"src/free.c",
		"src/malloc.c",
		"src/malloc_deferred.c",
		"src/malloc_dirtier.c",
		"src/malloc_initialize.c",
		"src/malloc_walk.c",
		"src/mallocfreespace.c",
		"src/mallocgetheapptr.c",
		"src/mallocinfo.c",
		"src/mallocsetheapptr.c",
		"src/posix_memalign.c",
		"src/realloc.c",
		"src/rtems_heap_extend.c",
		"src/rtems_malloc.c",
		"src/rtems_memalign.c",
	]


	# TERMINAL_IDENTIFICATION_C_FILES
	source += [
		"src/isatty.c",
		"src/isatty_r.c"
	]

	# LIBC_GLUE_C_FILES
	source += [
		"src/__getpid.c",
		"src/__gettod.c",
		"src/__times.c",
		"src/truncate.c",
		"src/access.c",
		"src/stat.c",
		"src/lstat.c",
		"src/pathconf.c",
		"src/newlibc_reent.c",
		"src/newlibc_init.c",
		"src/newlibc_exit.c",
		"src/kill_noposix.c",
		"src/utsname.c"
	]

	# BSD_LIBC_C_FILES
	source += [
		"src/strlcpy.c",
		"src/strlcat.c",
		"src/issetugid.c"
	]

	source += [
		"src/gxx_wrappers.c",
		"src/getchark.c",
		"src/printk.c",
		"src/printk_plugin.c",
		"src/putk.c",
		"src/vprintk.c",
	]

	source += [
		"src/envlock.c",
		"src/getpagesize.c",
		"src/getrusage.c",
		"src/flockfile.c",
		"src/funlockfile.c",
		"src/ftrylockfile.c"
	]

	source += [
		"src/getpwent.c",
		"src/clonenode.c",
		"src/ctermid.c",
		"src/ttyname.c",
		"src/readdir_r.c",
		"src/rtems_putc.c",
		"src/getcwd.c",
		"src/libio_exit.c",
		"src/rtems_heap_null_extend.c",
		"src/sup_fs_check_permissions.c",
#		"src/sup_fs_deviceerrno.c",
		"src/sup_fs_deviceio.c",
		"src/sup_fs_eval_path.c",
		"src/sup_fs_eval_path_generic.c",
		"src/sup_fs_exist_in_same_instance.c",
		"src/sup_fs_location.c",
		"src/sup_fs_mount_iterate.c",
		"src/sup_fs_next_token.c",
		"src/sup_fs_node_type.c",
		"src/rtems_heap_extend_via_sbrk.c",
		"src/resource_snapshot.c",
		"src/rtems_heap_greedy.c",
		"src/printf_plugin.c",
		"src/freenode.c",
		"src/cachealignedalloc.c",
		"src/pwdgrp.c",
		"src/getgrent.c",
		"src/getgrnam.c",
		"src/cachecoherentalloc.c"
	]


	ctx.cpu.source(
		source,
		alias="csupport",
		features="src_include"
	)
